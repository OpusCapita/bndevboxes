 {
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "gitToken": {
          "type": "String"
        },
        "devboxVmNamePrefix": {
          "defaultValue": "devbox",
          "type": "String"
        },
        "devboxVmSize": {
          "defaultValue": "Standard_F8s_v2",
          "type": "String"
        },
        "devboxShutdownTime_HHmm": {
          "defaultValue": "1905",
          "type": "String"
        },
        "devboxShutdownTimeZone": {
          "defaultValue": "W. Europe Standard Time",
          "type": "String"
        },
        "sshPublicKey": {
          "type": "String"
        },
        "adminUserName": {
          "type": "String"
        },
        "extLbName": {
          "defaultValue": "DevboxExtLB",
          "type": "String"
        },
        "ExtLbPublicIpName": {
          "type": "String"
        },
        "domainNameLabel": {
          "type": "String"
        },
        "devboxVmNicNamePrefix": {
          "defaultValue": "devboxVmNic",
          "type": "String"
        },
        "devboxNetworkSecurityGroupName": {
          "defaultValue": "devbox-nsg",
          "type": "String"
        },
        "devboxCount": {
          "type": "int"
        },
        "diagStorageAccountName": {
          "type": "String"
        },
        "subnetIdRef": {
          "type": "String"
        }
    },
    "variables": {
      "bePoolName": "devboxPool",
      "sshNatPoolName": "devboxNatSsh",
      "httpNatPoolName": "devboxNatHttp",
      "extLbFrontEndPoolId": "[concat(resourceGroup().id, '/providers/Microsoft.Network/loadBalancers/', parameters('extLbName'), '/frontendIPConfigurations/LoadBalancerFrontEnd')]",
      "extLbHttpBackEndAddressPoolId": "[concat(resourceGroup().id, '/providers/Microsoft.Network/loadBalancers/', parameters('extLbName'), '/backendAddressPools/', variables('bePoolName'))]",
      "extLbHttpBackEndProbeId": "[concat(resourceGroup().id, '/providers/Microsoft.Network/loadBalancers/', parameters('extLbName'), '/probes/gatewayProbe')]"
    },
    "resources": [
        {
            "comments": "Public IP for web access.",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('ExtLbPublicIpName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('domainNameLabel')]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Public facing loadbalancer, acting as public entry point to env. http / https is balanced to devbox pool.",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[parameters('extLbName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ExtLbPublicIpName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('bePoolName')]"
                    }
                ],
                "copy": [{
                    "name": "inboundNatRules",
                    "count": "[parameters('devboxCount')]",
                    "input": {
                        "name": "[concat('natSsh', copyIndex('inboundNatRules'))]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('extLbName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": "[copyIndex('inboundNatRules',2200)]",
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp"
                        }
                    }
                }]
                ,
                "outboundNatRules": [],
                "inboundNatPools": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('ExtLbPublicIpName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('devboxVmNicNamePrefix'), copyIndex())]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[concat('192.168.0.', copyIndex(4))]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[parameters('subnetIdRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('extLbName')), '/backendAddressPools/', variables('bePoolName'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [{
                                "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('extLbName'), concat('natSsh', copyIndex()) )]"
                            }]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('devboxNetworkSecurityGroupName'))]"
                }
            },
            "copy": {
                "name": "devboxvmniccopy",
                "count": "[parameters('devboxCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('devboxNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('extLbName'))]"
            ]
        },
        {
            "comments": "All devbox VMs are identical",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('devboxVmNamePrefix'),copyIndex())]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('devboxVmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(parameters('devboxVmNamePrefix'),copyIndex())]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUserName'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('devboxVmNicNamePrefix'),copyIndex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('diagStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "copy": {
                "name": "devboxvmcopy",
                "count": "[parameters('devboxCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('devboxVmNicNamePrefix'), copyIndex()))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('devboxVmNamePrefix'), copyIndex(), '/devboxInstallCustomScript')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                      "[uri(deployment().properties.templateLink.uri, 'devbox-install.sh')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('./devbox-install.sh ', parameters('adminUserName'), ' ', deployment().properties.templateLink.uri, ' ', parameters('gitToken'))]"
                }
            },
            "copy": {
                "name": "devboxvmcustomscriptcopy",
                "count": "[parameters('devboxCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('devboxVmNamePrefix'),copyIndex()))]"
            ]
        },        
        {
            "type": "microsoft.devtestlab/schedules",
            "name": "[concat(parameters('devboxVmNamePrefix'),'-asd-',copyIndex())]",
            "apiVersion": "2016-05-15",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[parameters('devboxShutdownTime_HHmm')]"
                },
                "timeZoneId": "[parameters('devboxShutdownTimeZone')]",
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('devboxVmNamePrefix'),copyIndex()))]",
                "provisioningState": "Succeeded",
                "uniqueIdentifier": "76d9926e-3c9f-4cc8-993a-59a01e9b412d"
            },
            "copy": {
                "name": "devboxvmasdcopy",
                "count": "[parameters('devboxCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('devboxVmNamePrefix'),copyIndex()) )]"
            ]
        },
        {
            "comments": "net work security group applied to devbox nodes.",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('devboxNetworkSecurityGroupName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-kong-http",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1005,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "dependsOn": []
        }
    ]
}
